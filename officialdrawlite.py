# -*- coding: utf-8 -*-
"""OfficialDrawlite.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AXbXR772IKawzgiRe_S7j31PDxQjVG1M
"""

!pip install replicate
!pip install scikit-learn
!pip install pickle
!pip install numpy
!pip install matplotlib
!pip install PIL

# Commented out IPython magic to ensure Python compatibility.

import replicate, pickle, numpy as np
from numpy import asarray
from PIL import Image

print("Which doodle shall we convert for you (use filename please):")
imgfile = input()

image = Image.open(imgfile)
new_image = image.resize((28, 28))
data = asarray(new_image)
data = data.astype('float32') / 255.
temp = []
temp.append([])
for y in range(len(data)):
  for x in range(len(data[y])):
    temp[0].append(data[y][x][0])
real_data = asarray(temp)

loaded_model = pickle.load(open('knnpickle_file', 'rb'))

result = loaded_model.predict(real_data)

classification = ""

if result == 0:
  classification = "butterfly"
elif result == 1:
  classification = "book"
elif result == 2:
  classification = "hat"
elif result == 4:
  classification = "stop sign"
elif result == 7:
  classification = "horse"
elif result == 8:
  classification = "palm tree"
elif result == 9:
  classification = "bird"
elif result == 10:
  classification = "bed"
elif result == 11:
  classification = "shoe"
elif result == 13:
  classification = "flower"
elif result == 16:
  classification = "clock"
elif result == 17:
  classification = "boomerang"
elif result == 18:
  classification = "cloud"
elif result == 19:
  classification = "bucket"
elif result == 20:
  classification = "car"
elif result == 21:
  classification = "axe"
elif result == 22:
  classification = "guitar"
elif result == 25:
  classification = "sun"
elif result == 26:
  classification = "flower"
elif result == 27:
  classification = "airplane"
elif result == 29:
  classification = "bear"
elif result == 30:
  classification = "pizza"

#%env REPLICATE_API_TOKEN=YOURTOKENFROMREPLICATE
# %env REPLICATE_API_TOKEN=

replicate.run(
  "stability-ai/stable-diffusion:27b93a2413e7f36cd83da926f3656280b2931564ff050bf9575f1fdf9bcd7478",
  input={"prompt": classification}
)
